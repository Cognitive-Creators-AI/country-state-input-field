{"version":3,"file":"index.js","sources":["../node_modules/classnames/index.js","../src/components/forms/dropdown.tsx","../src/components/forms/country-input.tsx","../src/components/forms/state-input.tsx","../src/components/forms/country-state-input.tsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import classNames from \"classnames\";\nimport React from \"react\";\nimport { ChevronDown, Search } from \"lucide-react\";\nimport { DropdownInputProps, DropdownListProps, Country } from \"../../lib/types\";\n\ninterface ExtendedDropdownInputProps extends DropdownInputProps {\n    inputClassName?: string;\n}\n\nexport const DropdownInput: React.FC<ExtendedDropdownInputProps> = ({\n    placeholder,\n    value,\n    onClick,\n    className,\n    inputClassName,\n    disabled,\n}) => (\n    <div\n        className={classNames(\"relative\", className, {\n            \"cursor-not-allowed opacity-50\": disabled,\n            \"cursor-pointer\": !disabled,\n        })}\n        onClick={disabled ? undefined : onClick}\n    >\n        <div\n            className={classNames(\"flex w-full items-center rounded-md\", {\n                \"border border-gray-300\": !inputClassName?.includes(\"border-none\"),\n                \"bg-white\": !inputClassName?.includes(\"bg-\"), // Default bg unless overridden\n            })}\n        >\n            <input\n                type=\"text\"\n                readOnly\n                value={value || placeholder}\n                placeholder={placeholder}\n                className={classNames(\n                    \"flex-1 cursor-pointer rounded-md\", // Default styling\n                    { \"text-gray-800\": value && !inputClassName?.includes(\"text-\") }, // Default text color if no override\n                    { \"text-gray-500\": !value && !inputClassName?.includes(\"text-\") }, // Default placeholder color if no override\n                    { \"cursor-not-allowed\": disabled }, // Disabled styles\n                    inputClassName, // Merge user-passed classes\n                )}\n                style={{ paddingRight: \"48px\" }} // Space for Chevron\n                disabled={disabled}\n            />\n            <ChevronDown className=\"pointer-events-none mr-3 h-5 w-5 text-gray-700\" stroke=\"gray\" />\n        </div>\n    </div>\n);\n\nexport const DropdownList: React.FC<DropdownListProps> = ({\n    items,\n    onSelect,\n    filter,\n    setFilter,\n    className,\n    maxHeight = \"300px\",\n}) => (\n    <div\n        className={classNames(\n            \"absolute z-10 mt-1 w-full rounded-md shadow-lg\",\n            {\n                \"border border-gray-300 bg-gray-800\":\n                    !className?.includes(\"border-none\") && !className?.includes(\"bg-\"),\n            },\n            className,\n        )}\n    >\n        <div className=\"border-b border-gray-700 p-2\" style={{ paddingBottom: \"0.25rem\", paddingTop: \"0.5rem\" }}>\n            <div className=\"flex items-center rounded-md bg-gray-700\">\n                <Search className=\"ml-3 h-4 w-4 text-gray-400\" style={{ marginRight: \"0.5rem\" }} />\n                <input\n                    type=\"text\"\n                    value={filter}\n                    onChange={(e) => setFilter(e.target.value)}\n                    placeholder=\"Search...\"\n                    className={classNames(\n                        \"ml-2 w-full rounded-md p-1 text-gray-600 placeholder-gray-400 outline-none\",\n                        { \"bg-gray-700\": !className?.includes(\"bg-\") }, // Default bg unless overridden\n                    )}\n                    style={{ padding: \"0.25rem\", color: \"gray\" }}\n                />\n            </div>\n        </div>\n        <div style={{ maxHeight, overflowY: \"auto\", paddingTop: \"0.25rem\" }} className=\"bg-nhir-input-box mt-2 py-2\">\n            {items.map((item) => (\n                <div\n                    key={item.id}\n                    className=\"cursor-pointer px-4 py-1 text-white hover:bg-gray-700\"\n                    onClick={() => onSelect(item)}\n                >\n                    {renderCountryItem(item as Country)}\n                </div>\n            ))}\n        </div>\n    </div>\n);\n\nconst renderCountryItem = (country: Country) => (\n    <div className=\"flex items-center gap-2\">\n        <span className=\"ml-2 mr-3\" style={{ marginLeft: \"1rem\", marginRight: \"1rem\" }}>\n            {country.emoji}\n        </span>\n        <span>{country.name}</span>\n    </div>\n);\n","import React, { useState, useCallback, useMemo } from \"react\";\nimport countriesData from \"../../data/countries.json\";\nimport { Country, CountryInputProps } from \"../../lib/types\";\nimport { DropdownInput, DropdownList } from \"./dropdown\";\n\nexport const CountryInput: React.FC<CountryInputProps> = ({ onSelect, className, inputClassName }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedCountry, setSelectedCountry] = useState<Country | null>(null);\n    const [filter, setFilter] = useState(\"\");\n\n    const countries = useMemo(() => countriesData as Country[], []);\n\n    const filteredCountries = useMemo(\n        () => countries.filter((country) => country.name.toLowerCase().includes(filter.toLowerCase())),\n        [countries, filter],\n    );\n\n    const handleSelect = useCallback(\n        (country: Country) => {\n            setSelectedCountry(country);\n            onSelect(country, country.iso2); // We still use iso2 internally\n            setIsOpen(false);\n        },\n        [onSelect],\n    );\n\n    return (\n        <div className={`relative ${className || \"\"}`}>\n            <DropdownInput\n                placeholder=\"Select a country\"\n                value={selectedCountry ? `${selectedCountry.emoji} ${selectedCountry.name}` : \"\"}\n                onClick={() => setIsOpen(!isOpen)}\n                inputClassName={inputClassName}\n            />\n            {isOpen && (\n                <DropdownList\n                    items={filteredCountries}\n                    renderItem={(item) => (\n                        <div className=\"flex items-center\">\n                            <span className=\"mr-2\">{(item as Country).emoji}</span>\n                            <span>{item.name}</span>\n                        </div>\n                    )}\n                    onSelect={(item) => {\n                        if (\"emoji\" in item) {\n                            handleSelect(item as Country);\n                        }\n                    }}\n                    filter={filter}\n                    setFilter={setFilter}\n                />\n            )}\n        </div>\n    );\n};\n","import React, { useState, useCallback, useMemo } from \"react\";\nimport statesData from \"../../data/states.json\";\nimport { State, StateInputProps } from \"../../lib/types\";\nimport { DropdownInput, DropdownList } from \"./dropdown\";\n\nexport const StateInput: React.FC<StateInputProps> = ({ selectedCountryId, onSelect, className, inputClassName }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedState, setSelectedState] = useState<State | null>(null);\n    const [filter, setFilter] = useState(\"\");\n\n    const states = useMemo(() => statesData as State[], []);\n\n    const filteredStates = useMemo(\n        () =>\n            states\n                .filter((state) => state.country_id === selectedCountryId)\n                .filter((state) => state.name.toLowerCase().includes(filter.toLowerCase())),\n        [states, selectedCountryId, filter],\n    );\n\n    const handleSelect = useCallback(\n        (state: State) => {\n            setSelectedState(state);\n            onSelect(state);\n            setIsOpen(false);\n        },\n        [onSelect],\n    );\n\n    return (\n        <div className={`relative ${className || \"\"}`}>\n            <DropdownInput\n                placeholder=\"Select a state\"\n                value={selectedState?.name || \"\"}\n                onClick={() => setIsOpen(!isOpen)}\n                disabled={!selectedCountryId}\n                inputClassName={inputClassName}\n            />\n            {isOpen && (\n                <DropdownList\n                    items={filteredStates}\n                    renderItem={(item) => <span>{item.name}</span>}\n                    onSelect={(item) => {\n                        if (!(\"emoji\" in item)) {\n                            handleSelect(item as State);\n                        }\n                    }}\n                    filter={filter}\n                    setFilter={setFilter}\n                />\n            )}\n        </div>\n    );\n};\n","import React, { useState, useCallback } from \"react\";\nimport { CountryStateInputProps, Country } from \"../../lib/types\";\nimport { CountryInput } from \"./country-input\";\nimport { StateInput } from \"./state-input\";\n\ninterface ExtendedCountryStateInputProps extends CountryStateInputProps {\n    layout?: \"horizontal\" | \"vertical\";\n    containerClassName?: string;\n    countryClassName?: string;\n    stateClassName?: string;\n    countryInputClassName?: string;\n    stateInputClassName?: string;\n}\n\nexport const CountryStateInput: React.FC<ExtendedCountryStateInputProps> = ({\n    onSelectCountry,\n    onSelectState,\n    containerClassName,\n    countryClassName,\n    stateClassName,\n    layout = \"vertical\",\n    countryInputClassName,\n    stateInputClassName,\n}) => {\n    const [selectedCountry, setSelectedCountry] = useState<Country | null>(null);\n\n    const handleCountrySelect = useCallback(\n        (country: Country, countryCode: string) => {\n            setSelectedCountry(country);\n            onSelectCountry(country, countryCode);\n        },\n        [onSelectCountry],\n    );\n\n    const containerClass = `${containerClassName || \"\"} ${\n        layout === \"horizontal\" ? \"flex flex-row space-x-4\" : \"flex flex-col space-y-4\"\n    }`;\n\n    return (\n        <div className={containerClass}>\n            <CountryInput\n                onSelect={handleCountrySelect}\n                className={`flex-1 ${countryClassName || \"\"}`}\n                inputClassName={countryInputClassName || \"\"}\n            />\n            <StateInput\n                selectedCountryId={selectedCountry?.id || null}\n                onSelect={onSelectState}\n                className={`flex-1 ${stateClassName || \"\"}`}\n                inputClassName={stateInputClassName || \"\"}\n            />\n        </div>\n    );\n};\n\n// Re-export components for easier imports\nexport { CountryInput } from \"./country-input\";\nexport { StateInput } from \"./state-input\";\nexport type { Country, State, CountryInputProps, StateInputProps } from \"../../lib/types\";\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","key","call","value","newClass","module","exports","default","window","DropdownInput","_a","placeholder","onClick","className","inputClassName","disabled","React","undefined","createElement","type","readOnly","style","paddingRight","ChevronDown","stroke","DropdownList","items","onSelect","filter","setFilter","_b","maxHeight","paddingBottom","paddingTop","Search","marginRight","onChange","e","target","padding","color","overflowY","map","item","id","renderCountryItem","country","marginLeft","emoji","name","CountryInput","useState","isOpen","setIsOpen","_c","selectedCountry","setSelectedCountry","_d","countries","useMemo","countriesData","filteredCountries","toLowerCase","handleSelect","useCallback","iso2","concat","renderItem","StateInput","selectedCountryId","selectedState","setSelectedState","states","statesData","filteredStates","state","country_id","onSelectCountry","onSelectState","containerClassName","countryClassName","stateClassName","layout","countryInputClassName","stateInputClassName","handleCountrySelect","countryCode","containerClass"],"mappings":"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","x_google_ignoreList":[0]}