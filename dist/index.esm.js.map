{"version":3,"file":"index.esm.js","sources":["../src/components/forms/dropdown.tsx","../src/components/forms/country-input.tsx","../src/components/forms/state-input.tsx","../src/components/forms/country-state-input.tsx"],"sourcesContent":["import React from \"react\";\nimport { ChevronDown, Search } from \"lucide-react\";\nimport { DropdownInputProps, DropdownListProps, Country } from \"../../lib/types\";\n\ninterface ExtendedDropdownInputProps extends DropdownInputProps {\n    inputClassName?: string;\n}\n\nexport const DropdownInput: React.FC<ExtendedDropdownInputProps> = ({\n    placeholder,\n    value,\n    onClick,\n    className,\n    inputClassName,\n    disabled,\n}) => (\n    <div\n        className={`relative ${className} ${disabled ? \"cursor-not-allowed opacity-50\" : \"cursor-pointer\"}`}\n        onClick={disabled ? undefined : onClick}\n    >\n        <div className=\"mb-2 flex w-full items-center rounded-md border border-gray-300 bg-white\">\n            <input\n                type=\"text\"\n                readOnly\n                value={value || placeholder}\n                placeholder={placeholder}\n                className={`flex-1 cursor-pointer rounded-md border border-gray-300 bg-white ${\n                    value ? \"text-gray-800\" : \"text-gray-500\"\n                } ${disabled ? \"cursor-not-allowed\" : \"\"} ${inputClassName || \"\"}`}\n                style={{ paddingRight: \"48px\" }} // Increase padding-right to allow space for the icon\n                disabled={disabled}\n            />\n            <ChevronDown className=\"pointer-events-none mr-3 h-5 w-5 text-gray-700\" stroke=\"gray\" />\n        </div>\n    </div>\n);\n\nexport const DropdownList: React.FC<DropdownListProps> = ({\n    items,\n    onSelect,\n    filter,\n    setFilter,\n    className,\n    maxHeight = \"300px\",\n}) => (\n    <div className={`absolute z-10 mt-1 w-full rounded-md border border-gray-300 bg-gray-800 shadow-lg ${className}`}>\n        <div className=\"border-b border-gray-700 p-2\" style={{ paddingBottom: \"0.25rem\", paddingTop: \"0.5rem\" }}>\n            <div className=\"flex items-center rounded-md bg-gray-700\">\n                <Search className=\"ml-3 h-4 w-4 text-gray-400\" style={{ marginRight: \"0.5rem\" }} />\n                <input\n                    type=\"text\"\n                    value={filter}\n                    onChange={(e) => setFilter(e.target.value)}\n                    placeholder=\"Search...\"\n                    className=\"ml-2 w-full rounded-md bg-gray-700 p-1 text-white placeholder-gray-400 outline-none\"\n                    style={{ padding: \"0.25rem\" }}\n                />\n            </div>\n        </div>\n        <div style={{ maxHeight, overflowY: \"auto\", paddingTop: \"0.25rem\" }} className=\"mt-2 py-2\">\n            {items.map((item) => (\n                <div\n                    key={item.id}\n                    className=\"cursor-pointer px-4 py-2 text-white hover:bg-gray-700\"\n                    onClick={() => onSelect(item)}\n                >\n                    {renderCountryItem(item as Country)}\n                </div>\n            ))}\n        </div>\n    </div>\n);\n\nconst renderCountryItem = (country: Country) => (\n    <div className=\"flex items-center gap-2\">\n        <span className=\"ml-2 mr-3\" style={{ marginLeft: \"1rem\", marginRight: \"1rem\" }}>\n            {country.emoji}\n        </span>\n        <span>{country.name}</span>\n    </div>\n);\n","import React, { useState, useCallback, useMemo } from \"react\";\nimport countriesData from \"../../data/countries.json\";\nimport { Country, CountryInputProps } from \"../../lib/types\";\nimport { DropdownInput, DropdownList } from \"./dropdown\";\n\nexport const CountryInput: React.FC<CountryInputProps> = ({ onSelect, className, inputClassName }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedCountry, setSelectedCountry] = useState<Country | null>(null);\n    const [filter, setFilter] = useState(\"\");\n\n    const countries = useMemo(() => countriesData as Country[], []);\n\n    const filteredCountries = useMemo(\n        () => countries.filter((country) => country.name.toLowerCase().includes(filter.toLowerCase())),\n        [countries, filter],\n    );\n\n    const handleSelect = useCallback(\n        (country: Country) => {\n            setSelectedCountry(country);\n            onSelect(country);\n            setIsOpen(false);\n        },\n        [onSelect],\n    );\n\n    return (\n        <div className={`relative ${className || \"\"}`}>\n            <DropdownInput\n                placeholder=\"Select a country\"\n                value={selectedCountry ? `${selectedCountry.emoji} ${selectedCountry.name}` : \"\"}\n                onClick={() => setIsOpen(!isOpen)}\n                inputClassName={inputClassName}\n            />\n            {isOpen && (\n                <DropdownList\n                    items={filteredCountries}\n                    renderItem={(item) => (\n                        <div className=\"flex items-center\">\n                            <span className=\"mr-2\">{(item as Country).emoji}</span>\n                            <span>{item.name}</span>\n                        </div>\n                    )}\n                    onSelect={(item) => {\n                        if (\"emoji\" in item) {\n                            handleSelect(item as Country);\n                        }\n                    }}\n                    filter={filter}\n                    setFilter={setFilter}\n                />\n            )}\n        </div>\n    );\n};\n","import React, { useState, useCallback, useMemo } from \"react\";\nimport statesData from \"../../data/states.json\";\nimport { State, StateInputProps } from \"../../lib/types\";\nimport { DropdownInput, DropdownList } from \"./dropdown\";\n\nexport const StateInput: React.FC<StateInputProps> = ({ selectedCountryId, onSelect, className, inputClassName }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [selectedState, setSelectedState] = useState<State | null>(null);\n    const [filter, setFilter] = useState(\"\");\n\n    const states = useMemo(() => statesData as State[], []);\n\n    const filteredStates = useMemo(\n        () =>\n            states\n                .filter((state) => state.country_id === selectedCountryId)\n                .filter((state) => state.name.toLowerCase().includes(filter.toLowerCase())),\n        [states, selectedCountryId, filter],\n    );\n\n    const handleSelect = useCallback(\n        (state: State) => {\n            setSelectedState(state);\n            onSelect(state);\n            setIsOpen(false);\n        },\n        [onSelect],\n    );\n\n    return (\n        <div className={`relative ${className || \"\"}`}>\n            <DropdownInput\n                placeholder=\"Select a state\"\n                value={selectedState?.name || \"\"}\n                onClick={() => setIsOpen(!isOpen)}\n                disabled={!selectedCountryId}\n                inputClassName={inputClassName}\n            />\n            {isOpen && (\n                <DropdownList\n                    items={filteredStates}\n                    renderItem={(item) => <span>{item.name}</span>}\n                    onSelect={(item) => {\n                        if (!(\"emoji\" in item)) {\n                            handleSelect(item as State);\n                        }\n                    }}\n                    filter={filter}\n                    setFilter={setFilter}\n                />\n            )}\n        </div>\n    );\n};\n","import React, { useState, useCallback } from \"react\";\nimport { CountryStateInputProps, Country } from \"../../lib/types\";\nimport { CountryInput } from \"./country-input\";\nimport { StateInput } from \"./state-input\";\n\ninterface ExtendedCountryStateInputProps extends CountryStateInputProps {\n    layout?: \"horizontal\" | \"vertical\";\n    containerClassName?: string;\n    countryClassName?: string;\n    stateClassName?: string;\n    countryInputClassName?: string;\n    stateInputClassName?: string;\n}\n\nexport const CountryStateInput: React.FC<ExtendedCountryStateInputProps> = ({\n    onSelectCountry,\n    onSelectState,\n    containerClassName,\n    countryClassName,\n    stateClassName,\n    layout = \"vertical\",\n    countryInputClassName,\n    stateInputClassName,\n}) => {\n    const [selectedCountry, setSelectedCountry] = useState<Country | null>(null);\n\n    const handleCountrySelect = useCallback(\n        (country: Country) => {\n            setSelectedCountry(country);\n            onSelectCountry(country);\n        },\n        [onSelectCountry],\n    );\n\n    const containerClass = `${containerClassName || \"\"} ${\n        layout === \"horizontal\" ? \"flex flex-row space-x-4\" : \"flex flex-col space-y-4\"\n    }`;\n\n    return (\n        <div className={containerClass}>\n            <CountryInput\n                onSelect={handleCountrySelect}\n                className={`flex-1 ${countryClassName || \"\"}`}\n                inputClassName={countryInputClassName || \"\"}\n            />\n            <StateInput\n                selectedCountryId={selectedCountry?.id || null}\n                onSelect={onSelectState}\n                className={`flex-1 ${stateClassName || \"\"}`}\n                inputClassName={stateInputClassName || \"\"}\n            />\n        </div>\n    );\n};\n\n// Re-export components for easier imports\nexport { CountryInput } from \"./country-input\";\nexport { StateInput } from \"./state-input\";\nexport type { Country, State, CountryInputProps, StateInputProps } from \"../../lib/types\";\n"],"names":["DropdownInput","_a","placeholder","value","onClick","className","inputClassName","disabled","React","createElement","concat","undefined","type","readOnly","style","paddingRight","ChevronDown","stroke","DropdownList","items","onSelect","filter","setFilter","_b","maxHeight","paddingBottom","paddingTop","Search","marginRight","onChange","e","target","padding","overflowY","map","item","key","id","renderCountryItem","country","marginLeft","emoji","name","CountryInput","useState","isOpen","setIsOpen","_c","selectedCountry","setSelectedCountry","_d","countries","useMemo","countriesData","filteredCountries","toLowerCase","includes","handleSelect","useCallback","renderItem","StateInput","selectedCountryId","selectedState","setSelectedState","states","statesData","filteredStates","state","country_id","CountryStateInput","onSelectCountry","onSelectState","containerClassName","countryClassName","stateClassName","layout","countryInputClassName","stateInputClassName","handleCountrySelect","containerClass"],"mappings":"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"}